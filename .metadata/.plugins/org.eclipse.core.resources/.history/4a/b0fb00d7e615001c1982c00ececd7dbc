package com.kh.network.thread;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.Socket;

// 클라이언트와 통신을 위한 스레드 구현
public class Receiver implements Runnable {

	private Socket client;
	
	public Receiver() {
	}
	
	
	public Receiver(Socket client) {
		this.client = client;
	}


	@Override
	public void run() {
		// 5. 연결된 클라이언트와 입출력 스트림을 생성한다.
		InputStream is = client.getInputStream(); // 클라이언트로부터 값을 입력받을 스트림
		OutputStream os = client.getOutputStream(); // 클라이언트로 값을 출력하는 스트림
		
		// 6. 보조 스트림을 통해 성능 개선
		BufferedReader br = new BufferedReader(new InputStreamReader(is));
		PrintWriter pw = new PrintWriter(os, true);
		
		// 7. 스트림을 통해 데이터를 읽고 쓰기
		while(true) {
			String message = br.readLine(); // 클라이언트로부터 입력이 있을 때까지 블로킹(대기)된다.
			
			if(message == null || message.equals("exit")) {
				System.out.println("접속 종료.");
				
				break;
			} else {
				System.out.println(client.getInetAddress().getHostAddress() + "가 보낸 메시지 : " + message);
				
				pw.println("메시지 받기 성공.");
//				pw.flush();

			}
		}
		
		// 8. 통신 종료
		br.close();
		pw.close();
		client.close();
		
	
	}

}
